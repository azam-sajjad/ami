###################################################################
#               lynis solution
####################################################################


######################## YUM ##############################################################

- name: "SCORED | LYNIS | FIX | Ensure Installation of tripwire"
  yum:
    name: tripwire
    state: latest
  tags:
    - level1
    - scored
    - lynis
  ignore_errors: yes

- name: "SCORED | LYNIS | FIX | Ensure Installation of Malware Tool: rkhunter"
  yum:
    name: rkhunter
    state: latest
  when:
    - setup_rkhunter
  tags:
    - level1
    - scored
    - lynis

- name: "SCORED | LYNIS | FIX | add working values to /etc/rkhunter.conf"
  blockinfile:
    path: /etc/rkhunter.conf
    insertafter: '^#WEB_CMD="/bin/false"'
    block: |
      MIRRORS_MODE=0
      UPDATE_MIRRORS=1
      MAIL-ON-WARNING="{{ rkhunter_warning_email_address }}"
  when:
    - setup_rkhunter  
  tags:
    - level1
    - scored
    - lynis

- name: "SCORED | LYNIS | FIX | Run Anti-Malware Tool: rkhunter"
  shell: |
    rkhunter --check --skip-keypress 
    rkhunter --update
    rkhunter --propupd
  when:
    - setup_rkhunter  
  tags:
    - level1
    - scored
    - lynis


- name: "SCORED | LYNIS | FIX | Ensure permissions on /var/log/rkhunter/rkhunter.log are configured"
  file:
      dest: /var/log/rkhunter/rkhunter.log
      state: file
      owner: root
      group: root
      mode: 0640
  tags:
    - level1
    - scored
    - lynis

- name: "SCORED | 1.4.2 | PATCH | Ensure Malware Check is regularly checked with a CronJob"
  cron:
      name: Run RKHUNTER Malware check daily
      cron_file: "{{ setup_rkhunter_cron['cron_file'] }}"
      user: "{{ setup_rkhunter_cron['cron_user'] }}"
      minute: "{{ setup_rkhunter_cron['cron_minute'] | default('0') }}"
      hour: "{{ setup_rkhunter_cron['cron_hour'] | default('5') }}"
      day: "{{ setup_rkhunter_cron['cron_day'] | default('*') }}"
      month: "{{ setup_rkhunter_cron['cron_month'] | default('*') }}"
      weekday: "{{ setup_rkhunter_cron['cron_weekday'] | default('*') }}"
      job: "{{ setup_rkhunter_cron['cron_job'] }}"
  when:
    - setup_rkhunter
    - enable_rkhunter_cronjob  
  tags:
    - level1
    - scored
    - lynis
######################## PERMISSIONS ##############################################################
- name: "SCORED | LYNIS | FIX | Permissions /etc/motd"
  file:
    dest: /etc/motd
    owner: root
    group: root
    mode: '0644'
  tags:
    - level1
    - scored
    - lynis
- name: "SCORED | LYNIS | FIX | Ensure permissions on /boot/grub2/grub.cfg are configured"
  file:
      dest: /boot/grub2/grub.cfg
      state: file
      owner: root
      group: root
      mode: 0600
  tags:
    - level1
    - scored
    - lynis
# - name: "Check if /etc/at.allow Exists."
#   stat:
#     path: "/etc/at.allow"
#   register: at.allow
# - name: "Create the File if it doesnot exist"
#   file:
#     state: touch

- name: "SCORED | LYNIS | FIX | Ensure permissions on /etc/at.allow are configured"
  file:
      dest: /etc/at.allow
      state: touch
      owner: root
      group: root
      mode: 0600
      access_time: preserve
      modification_time: preserve
  tags:
    - level1
    - scored
    - lynis

- name: "SCORED | LYNIS | FIX | Ensure permissions on /etc/cron.allow are configured"
  file:
      dest: /etc/cron.allow
      state: touch
      owner: root
      group: root
      mode: 0600
      access_time: preserve
      modification_time: preserve
  tags:
    - level1
    - scored
    - lynis
      
- name: "SCORED | LYNIS | FIX | Ensure permissions on /usr/bin/as are configured"
  file:
      dest: /usr/bin/as
      state: file
      owner: root
      group: root
      mode: 0740
      access_time: preserve
      modification_time: preserve
  tags:
    - level1
    - scored
    - lynis

- name: "SCORED | LYNIS | FIX | add SHA_CRYPT values to /etc/login.defs"
  blockinfile:
    path: /etc/login.defs
    insertafter: "^#SHA_CRYPT_MAX_ROUNDS"
    block: |
      SHA_CRYPT_MAX_ROUNDS      100
      SHA_CRYPT_MIN_ROUNDS      10
  tags:
    - level1
    - scored
    - lynis

######################## POSTFIX ##############################################################
- name: "SCORED | LYNIS | FIX | Ensure Installation of Postfix"
  yum:
    name: postfix
    state: latest
  tags:
    - level1
    - scored
    - lynis

- name: "SCORED | LYNIS | FIX | add block smtp vrfy command & smtp banner values to /etc/postfix/main.cf"
  blockinfile:
    path: /etc/postfix/main.cf
    block: |
      smtpd_banner = $myhostname ESMTP
      biff = no
      disable_vrfy_command = yes
  tags:
    - level1
    - scored
    - lynis

######################## MODPROBE - BLACKLIST ##############################################################
- name: "Check if /etc/modprobe.d/blacklist.conf Exists."
  stat:
    path: "/etc/modprobe.d/blacklist.conf"
  register: modprobe_blacklist
  tags:
    - level1
    - scored
    - lynis
- name: "Create the blacklist.conf file if it doesnot exist"
  file:
    path: "/etc/modprobe.d/blacklist.conf"
    state: touch
    owner: root
    group: root
    mode: 0600
  when:
    - not modprobe_blacklist.stat.exists
  tags:
    - level1
    - scored
    - lynis
- name: "SCORED | LYNIS | FIX | add firewire-ohci to /etc/modprobe.d/blacklist.conf"
  lineinfile:
    path: /etc/modprobe.d/blacklist.conf
    line: "install firewire-ohci /bin/true"
  tags:
    - level1
    - scored
    - lynis


######################## AUDITd ##############################################################
- name: "SCORED | LYNIS | FIX | add a block to /etc/audit/rules.d/audit.rules"
  blockinfile:
    path: /etc/audit/rules.d/audit.rules
    block: |
      ###### Audit the audit logs ######
      -w /var/log/audit/ -k auditlog
      -w /etc/ssh/sshd_config -k sshd
      -e 2
  tags:
    - level1
    - scored
    - lynis
- name: load audit rules
  command: /sbin/augenrules --load
######################## SYSCTL ##############################################################
- name: "SCORED | LYNIS | FIX | add a block to /etc/sysctl.d/80-lynis.conf"
  blockinfile:
    path: /etc/sysctl.d/80-lynis.conf
    create: true
    owner: root
    group: root
    mode: 0644
    block: |
      kernel.kptr_restrict = 2
      kernel.sysrq = 0
      net.ipv4.conf.all.accept_redirects = 0
      net.ipv4.conf.all.log_martians = 1
      net.ipv4.conf.default.log_martians = 1
      net.ipv4.conf.all.send_redirects = 0
      net.ipv4.conf.default.accept_redirects = 0
      #net.ipv4.tcp_timestamps = 0
      net.ipv6.conf.all.accept_redirects = 0
      net.ipv6.conf.default.accept_redirects = 0
      net.ipv6.conf.all.accept_ra = 0
      net.ipv6.conf.default.accept_ra = 0
  tags:
    - level1
    - scored
    - lynissa

- name: "SCORED | LYNIS | FIX | reload sysctl"
  command: "sysctl --system"
  tags:
    - level1
    - scored
    - lynis

- name: "SCORED | LYNIS | FIX | add a lynis recommended block to /etc/ssh/sshd_config"
  blockinfile:
    path: /etc/ssh/sshd_config
    block: |
      Compression no 
      TCPKeepAlive no 
      Port 22 
      PrintMotd no
      PrintLastLog yes
  tags:
    - level1
    - scored
    - lynis
- name: "LYNIS | FIX | Disable Showing MOTD from PAM Modules"
  command: sed -i "s/session    optional     pam_motd.so/#session    optional     pam_motd.so/g" /etc/pam.d/sshd
  tags:
    - level1
    - scored
    - lynis

- name: "SCORED | LYNIS | FIX | add a line to /etc/lynis/default.prf - to skip a test"
  lineinfile:
    path: /etc/lynis/default.prf
    line: "skip-test=NETW-2705"
    state: present
    create: yes
  tags:
    - level1
    - scored
    - lynis
######################## IPTABLES ##############################################################
- name: "SCORED | LYNIS | FIX | Ensure Installation of iptables-services"
  yum:
    name: iptables-services
    state: latest
  tags:
    - level1
    - scored
    - lynis
- name: "SCORED | LYNIS | FIX | Ensure Enabling of iptables"
  service:
    name: iptables
    state: started
    enabled: yes
  no_log: True
  tags:
    - level1
    - scored
    - lynis
- name: "SCORED | LYNIS | FIX | Ensure Enabling of ip6tables"
  service:
    name: ip6tables
    state: started
    enabled: yes
  no_log: True
  tags:
    - level1
    - scored
    - lynis
- name: "SCORED | LYNIS | FIX | Ensure Saving iptables rules"
  command: service iptables save && service ip6tables save
  tags:
    - level1
    - scored
    - lynis
######################## SELINUX ##############################################################
- name: Enable SELinux
  ansible.posix.selinux:
    policy: targeted
    state: enforcing
- name: restore default selinux contexts
  command: restorecon -FRv /
- name: reload selinux contexts
  command: touch /.autorelabel
- name: sync selinux contexts
  command: sync
  notify:
    - Reboot machine and send a message
# - name: init
#   command: init 6


