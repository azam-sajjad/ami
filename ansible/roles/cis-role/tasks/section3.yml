---
- name: "SCORED | 3.1.1 | PATCH | Ensure IP forwarding is disabled"
  block:
      - name: "SCORED | 3.1.1 | PATCH | Ensure IP forwarding is disabled | ipv4"
        sysctl:
            name: net.ipv4.ip_forward
            value: "0"
            state: present
            reload: true
            ignoreerrors: true

      - name: "SCORED | 3.1.1 | PATCH | Ensure IP forwarding is disabled | ipv6"
        sysctl:
            name: net.ipv6.conf.all.forwarding
            value: "0"
            state: present
            reload: true
            ignoreerrors: true
        when: cis_ipv6_required|d(false)|bool
  when:
    - not cis_is_router
    - cis_rule_3_1_1
  tags:
      - level1
      - scored
      - patch
      - sysctl
      - rule_3.1.1

- name: "SCORED | 3.1.2 | PATCH | Ensure packet redirect sending is disabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - { name: net.ipv4.conf.all.send_redirects, value: 0 }
      - { name: net.ipv4.conf.default.send_redirects, value: 0 }
  when:
    - not cis_is_router
    - cis_rule_3_1_2
  tags:
      - level1
      - scored
      - patch
      - sysctl
      - rule_3.1.2


- name: "SCORED | 3.2.1 | PATCH | Ensure source routed packets are not accepted"
  block:
      - name: "SCORED | 3.2.1 | PATCH | Ensure source routed packets are not accepted | ipv4"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - { name: net.ipv4.conf.all.accept_source_route, value: 0 }
            - { name: net.ipv4.conf.default.accept_source_route, value: 0 }
      - name: "SCORED | 3.2.1 | PATCH | Ensure source routed packets are not accepted | ipv6"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - { name: net.ipv6.conf.all.accept_source_route, value: 0 }
            - { name: net.ipv6.conf.default.accept_source_route, value: 0 }
        when:
            - cis_ipv6_required|d(false)|bool
  when:
    - cis_rule_3_2_1
  tags:
      - level1
      - scored
      - patch
      - sysctl
      - rule_3.2.1

- name: "SCORED | 3.2.2 | PATCH | Ensure ICMP redirects are not accepted | ipv4,ipv6"
  block:
      - name: "SCORED | 3.2.2 | PATCH | Ensure ICMP redirects are not accepted | ipv4"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - { name: net.ipv4.conf.all.accept_redirects, value: 0 }
            - { name: net.ipv4.conf.default.accept_redirects, value: 0 }
      - name: "SCORED | 3.2.2 | PATCH | Ensure ICMP redirects are not accepted | ipv6"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - { name: net.ipv6.conf.all.accept_redirects, value: 0 }
            - { name: net.ipv6.conf.default.accept_redirects, value: 0 }
        when:
            - cis_ipv6_required|d(false)|bool
  when:
    - cis_rule_3_2_2
  tags:
      - level1
      - scored
      - patch
      - sysctl
      - rule_3.2.2

- name: "SCORED | 3.2.3 | PATCH | Ensure secure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - { name: net.ipv4.conf.all.secure_redirects, value: 0 }
      - { name: net.ipv4.conf.default.secure_redirects, value: 0 }
  when:
    - cis_rule_3_2_3
  tags:
      - level1
      - scored
      - patch
      - sysctl
      - rule_3.2.3

- name: "SCORED | 3.2.4 | PATCH | Ensure suspicious packets are logged"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - { name: net.ipv4.conf.all.log_martians, value: 1 }
      - { name: net.ipv4.conf.default.log_martians, value: 1 }
  when:
    - cis_rule_3_2_4
  tags:
      - level1
      - scored
      - patch
      - sysctl
      - rule_3.2.4

- name: "SCORED | 3.2.5 | PATCH | Ensure broadcast ICMP requests are ignored"
  sysctl:
      name: net.ipv4.icmp_echo_ignore_broadcasts
      value: "1"
      state: present
      reload: true
      ignoreerrors: true
  when:
    - cis_rule_3_2_5
  tags:
      - level1
      - scored
      - patch
      - sysctl
      - rule_3.2.5

- name: "SCORED | 3.2.6 | PATCH | Ensure bogus ICMP responses are ignored"
  sysctl:
      name: net.ipv4.icmp_ignore_bogus_error_responses
      value: "1"
      state: present
      reload: true
      ignoreerrors: true
  when:
    - cis_rule_3_2_6
  tags:
      - level1
      - scored
      - patch
      - sysctl
      - rule_3.2.6

- name: "SCORED | 3.2.7 | PATCH | Ensure Reverse Path Filtering is enabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - { name: net.ipv4.conf.all.rp_filter, value: 1 }
      - { name: net.ipv4.conf.default.rp_filter, value: 1 }
  when:
    - cis_rule_3_2_7
  tags:
      - level1
      - scored
      - patch
      - sysctl
      - rule_3.2.7

- name: "SCORED | 3.2.8 | PATCH | Ensure TCP SYN Cookies is enabled"
  sysctl:
      name: net.ipv4.tcp_syncookies
      value: '1'
      state: present
      reload: true
      ignoreerrors: true
  when:
    - cis_rule_3_2_8
  tags:
      - level1
      - scored
      - patch
      - sysctl
      - rule_3.2.8

- name: "SCORED | 3.2.9 | PATCH | Ensure IPv6 router advertisements are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      state: present
      reload: true
      ignoreerrors: true
  with_items:
    - { name: net.ipv6.conf.all.accept_ra, value: 0 }
    - { name: net.ipv6.conf.default.accept_ra, value: 0 }
  when:
    - cis_ipv6_required|d(false)|bool
    - cis_rule_3_2_9
  notify:
      - sysctl flush ipv6 route table
  tags:
      - level1
      - scored
      - patch
      - sysctl
      - rule_3.2.9

- name: "NOTSCORED | 3.3.1 | PATCH | Ensure TCP Wrappers is installed"
  package:
      name: "{{ tcp_wrapper_package[ansible_os_family] }}"
      state: present
  when:
      - cis_setup_tcp_wrappers
      - cis_rule_3_3_1
  tags:
      - level1
      - notscored
      - patch
      - rule_3.3.1

- name: "NOTSCORED | 3.3.2 | PATCH | Ensure /etc/hosts.allow is configured"
  template:
      src: hosts.allow.j2
      dest: /etc/hosts.allow
  when:
      - cis_setup_tcp_wrappers
      - cis_rule_3_3_2
  tags:
      - level1
      - notscored
      - patch
      - rule_3.3.2

- name: "NOTSCORED | 3.3.3 | PATCH | Ensure /etc/hosts.deny is configured"
  lineinfile:
      dest: /etc/hosts.deny
      regexp: "^(#)?ALL"
      line: "ALL: ALL"
  when:
      - cis_setup_tcp_wrappers
      - cis_rule_3_3_3
  tags:
      - level1
      - notscored
      - patch
      - rule_3.3.3

- name: "SCORED | 3.3.4 | PATCH | Ensure permissions on /etc/hosts.allow are configured"
  template:
      src: hosts.allow.j2
      dest: /etc/hosts.allow
      owner: root
      group: root
      mode: 0644
  when:
      - cis_setup_tcp_wrappers
      - cis_rule_3_3_4
  tags:
      - level1
      - scored
      - patch
      - rule_3.3.4

- name: "SCORED | 3.3.5 | PATCH | Ensure permissions on /etc/hosts.deny are configured"
  file:
      dest: /etc/hosts.deny
      owner: root
      group: root
      mode: 0644
  when:
      - cis_setup_tcp_wrappers
      - cis_rule_3_3_5
  tags:
      - level1
      - scored
      - patch
      - rule_3.3.5

- name: "SCORED | 3.4.1 | PATCH | Ensure DCCP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/blacklist.conf
      line: "install dccp /bin/true"
      create: true
  when:
      - cis_rule_3_4_1
  tags:
      - level2
      - scored
      - patch
      - rule_3.4.1

- name: "SCORED | 3.4.2 | PATCH | Ensure SCTP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/blacklist.conf
      line: "install sctp /bin/true"
  when:
      - cis_rule_3_4_2
  tags:
      - level2
      - scored
      - patch
      - rule_3.4.2

- name: "SCORED | 3.4.3 | PATCH | Ensure RDS is disabled"
  lineinfile:
      dest: /etc/modprobe.d/blacklist.conf
      line: "install rds /bin/true"
  when:
      - cis_rule_3_4_3
  tags:
      - level2
      - scored
      - patch
      - rule_3.4.3

- name: "SCORED | 3.4.4 | PATCH | Ensure TIPC is disabled"
  lineinfile:
      dest: /etc/modprobe.d/blacklist.conf
      line: "install tipc /bin/true"
  when:
      - cis_rule_3_4_4
  tags:
      - level2
      - scored
      - patch
      - rule_3.4.4

############################### Firewall ##################################

- name: "SCORED | 3.5.1 | PATCH | Ensure a Firewall package is installed | firewalld(CUSTOM),nftables,iptables"
  block:
      - name: "SCORED | 3.5.1 | PATCH | Ensure a Firewall package is installed | firewalld | CUSTOM"
        package:
            name: iptables
            state: present
        when:
            - cis_firewall == "firewalld"


      - name: "SCORED | 3.5.1 | PATCH | Ensure a Firewall package is installed | nftables"
        package:
            name: nftables
            state: present
        when:
            - cis_firewall == "nftables"

      - name: "SCORED | 3.5.1 | PATCH | Ensure a Firewall package is installed | iptables"
        package:
            name: "{{ item }}"
            state: present
        with_items:
            - iptables
            - iptables-services 
        when:
            - cis_firewall == "iptables"
  when:
      - cis_setup_firewall
  tags:
      - level1
      - scored
      - patch

- name: "SCORED | 3.5.1 | PATCH | Ensure firewall service is enabled"
  service:
      name: "{{ cis_firewall }}"
      state: started
      enabled: true
  when:
      - cis_setup_firewall
  tags:
      - level1
      - scored
      - patch

- name: "SCORED | LYNIS | FIX | Ensure Enabling of ip6tables"
  service:
    name: ip6tables
    state: started
    enabled: yes
  when:
      - cis_setup_firewall
      - cis_firewall == "iptables"
  tags:
      - level1
      - scored
      - patch

- name: "NOT SCORED | 3.5.2.2 | PATCH | Flush default ipv4 rules"
  ansible.builtin.iptables:
    chain: "{{ item }}"
    flush: yes
  with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]
  when:
      - cis_firewall == "iptables"
      - cis_setup_firewall
  tags:
      - level1
      - notscored
      - patch

- name: "NOT SCORED | 3.5.2.2 | PATCH | Flush default ipv6 rules"
  ansible.builtin.iptables:
    ip_version: ipv6
    chain: "{{ item }}"
    flush: yes
  with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]
  when:
      - cis_firewall == "iptables"
      - cis_setup_firewall
  tags:
      - level1
      - notscored
      - patch

########################## IP6

- name: "SCORED | 3.5.1.1 | PATCH | Ensure default ipv6 deny firewall policy"
  iptables:
      ip_version: ipv6
      chain: "{{ item }}"
      policy: DROP
  with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]
  when:
      - cis_ipv6_required|bool
      - cis_rule_3_5_1_1
      - cis_firewall == "iptables"
      - cis_setup_firewall
  notify:
      - iptables save
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.1.1

- name: "NOT SCORED | 3.5.1.2 | PATCH | Ensure IPv6 loopback traffic is configured"
  block:
      - name: Ensure IPv6 loopback traffic is configured
        iptables:
            ip_version: ipv6
            in_interface: lo
            chain: "{{ item }}"
            jump: ACCEPT
        with_items:  [ 'INPUT', 'OUTPUT' ]
      - name: Ensure IPv6 loopback traffic is configured
        iptables:
            ip_version: ipv6
            chain: INPUT
            source: "::1"
            jump: DROP
        notify:
            - iptables save
  when:
      - cis_rule_3_5_1_2
      - cis_firewall == "iptables"
      - cis_setup_firewall
      - cis_ipv6_required|bool
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.1.2


- name: "NOT SCORED | 3.5.1.3 | PATCH | Ensure IPv6 outbound and established connections are
configured"
  block:
      - name: IPv6 inbound and established connections
        iptables:
            ip_version: ipv6
            chain: INPUT
            protocol: tcp
            ctstate: ESTABLISHED
            jump: ACCEPT
      - name: IPv6 inbound and established connections
        iptables:
            ip_version: ipv6
            chain: OUTPUT
            protocol: tcp
            ctstate: NEW,ESTABLISHED
            jump: ACCEPT
        notify:
            - iptables save

  when:
      - cis_rule_3_5_1_3
      - cis_firewall == "iptables"
      - cis_setup_firewall
      - cis_ipv6_required|bool
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.1.3


########################## IP4

- name: "NOT SCORED | 3.5.2.2 | PATCH | Ensure IPv4 loopback traffic is configured"
  block:
      - name: "NOT SCORED | 3.5.2.2 | PATCH | Ensure IPv4 loopback traffic is configured"
        iptables:
            in_interface: lo
            chain: INPUT
            jump: ACCEPT
            comment: Accept lo on lo interface
      - name: "NOT SCORED | 3.5.2.2 | PATCH | Ensure IPv4 loopback traffic is configured"
        iptables:
            out_interface: lo
            chain: OUTPUT
            jump: ACCEPT
            comment: Accept lo on lo interface
      - name: Ensure IPv4 loopback traffic is configured
        iptables:
            chain: INPUT
            source: 127.0.0.0/8
            jump: DROP
            comment: Drop lo on other interfaces
        notify:
            - iptables save
  when:
      - cis_rule_3_5_2_2
      - cis_firewall == "iptables"
      - cis_setup_firewall
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.2.2


- name: "NOT SCORED | 3.5.2.3 | PATCH | Ensure IPv4 outbound and established connections are configured"
  block:
      - name: IPv6 inbound and established connections
        iptables:
            chain: INPUT
            protocol: tcp
            ctstate: ESTABLISHED,RELATED
            jump: ACCEPT
      - name: IPv6 inbound and established connections
        iptables:
            chain: OUTPUT
            protocol: tcp
            ctstate: NEW,ESTABLISHED,RELATED
            jump: ACCEPT
        notify:
            - iptables save
  when:
      - cis_rule_3_5_2_3
      - cis_firewall == "iptables"
      - cis_setup_firewall
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.2.3

- name: "SCORED | 3.5.2.x | PATCH | Allow ssh from a Specific IP address"
  ansible.builtin.iptables:
    chain: INPUT
    source: "{{ ssh_source_ip }}"
    destination_port: 22
    jump: ACCEPT
    action: insert
  become: yes
  when:
      - cis_rule_3_5_2_x
      - cis_firewall == "iptables"
      - cis_setup_firewall
      - \"{{ ssh_source_ip }}\" is defined
  notify:
      - iptables save
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.2.x

- name: "SCORED | 3.5.2.4 | PATCH | Ensure firewall rules exist for all open ports"
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 22
    ctstate: NEW
    syn: match
    jump: ACCEPT
    comment: Accept new SSH connections
    action: insert
    rule_num: 1
  when:
      - cis_rule_3_5_2_3
      - cis_firewall == "iptables"
      - cis_setup_firewall
  notify:
      - iptables save
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.2.3


- name: "SCORED | 3.5.2.1 | PATCH | Ensure default ipv4 deny firewall policy"
  iptables:
      ip_version: ipv4
      chain: "{{ item }}"
      policy: DROP
  with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]
  when:
      - cis_rule_3_5_2_1
      - cis_firewall == "iptables"
      - cis_setup_firewall
  notify:
      - iptables save
      - iptables save to file
      - ip6tables save to file

  tags:
      - level1
      - scored
      - patch
      - rule_3.5.2.1


########################## when cis_firewall =  ufw


- name: "SCORED | 3.5.3.1 | PATCH | Ensure ufw is installed and started | CUSTOM"
  apt:
      name: ufw
      state: present
  when:
      - cis_rule_3_5_3_1
      - cis_firewall == "ufw"
      - cis_setup_firewall
      - ansible_os_family == "Debian"
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.3.1

- name: "SCORED | 3.5.3.1 | PATCH | Ensure ufw is installed and started | CUSTOM"
  service:
      name: ufw
      state: started
      enabled: true
  when:
      - cis_rule_3_5_3_1
      - cis_firewall == "ufw"
      - cis_setup_firewall
      - ansible_os_family == "Debian"
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.3.1


- name: "SCORED | 3.5.3.3 | PATCH | Ensure firewall rules exist for all open ports | CUSTOM"
  ufw:
      service: "{{ item }}"
      state: enabled
      zone: drop
      permanent: true
      immediate: true
  when:
      - cis_rule_3_5_3_3
      - cis_firewall == "ufw"
      - cis_setup_firewall
      - ansible_os_family == "Debian"
  notify: restart ufw
  with_items: "{{ cis_firewall_services }}"
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.3.3

- name: "SCORED | 3.5.3.4 | PATCH | Ensure loopback traffic is configured"
  block:
      - name: "SCORED | 3.5.3.4 | PATCH | Ensure loopback traffic is configured| ingress lo allow any"
        ufw:
            rule: allow
            direction: in
            interface: lo

      - name: "SCORED | 3.5.3.4 | PATCH | Ensure loopback traffic is configured | ingress deny from lo network ipv4"
        ufw:
            rule: deny
            direction: in
            from: "127.0.0.0/8"

      - name: "SCORED | 3.5.3.4 | PATCH | Ensure loopback traffic is configured | ingress deny from lo network ipv6"
        ufw:
            rule: deny
            direction: in
            from: "::1"
        when: cis_ipv6_required|d(false)|bool
  when:
      - cis_rule_3_5_3_4
      - cis_firewall == "ufw"
      - cis_setup_firewall
      - ansible_os_family == "Debian"

- name: "NOTSCORED | 3.5.3.5 | PATCH | Ensure outbound and established connections are configured"
  ufw:
      rule: allow
      direction: out
      interface: all
  when:
      - cis_rule_3_5_3_5
      - cis_firewall == "ufw"
      - cis_setup_firewall
      - ansible_os_family == "Debian"
  tags:
      - level1
      - notscored
      - patch
      - rule_3.5.3.5

- name: "NOTSCORED | 3.5.3.5 | PATCH | Ensure firewall rules exist for all open ports"
  ufw:
      rule: allow
      proto: tcp
      port: '22'
  when:
      - cis_rule_3_5_3_5
      - cis_firewall == "ufw"
      - cis_setup_firewall
      - ansible_os_family == "Debian"
  tags:
      - level1
      - notscored
      - patch
      - rule_3.5.2.5

- name: "SCORED | 3.5.3.2 | PATCH | Ensure default deny firewall policy | CUSTOM"
  ufw:
      state: enabled
      zone: drop
      permanent: true
  when:
      - cis_rule_3_5_3_2
      - cis_firewall == "ufw"
      - cis_setup_firewall
      - ansible_os_family == "Debian"
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.3.2

- name: "SCORED | 3.5.3.2 | PATCH | Ensure default deny firewall policy"
  ufw:
      rule: "{{ item.rule }}"
      direction: "{{ item.direction }}"
  with_items:
      - { rule: deny, direction: incoming }
      - { rule: deny, direction: outgoing }
      - { rule: deny, direction: routed }
  when:
      - cis_rule_3_5_2_2
      - cis_firewall == "ufw"
      - cis_setup_firewall
      - ansible_os_family == "Debian"
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.3.2

########################## when cis_firewall = nftables

- name: "NOTSCORED | 3.5.4.1 | PATCH | Ensure iptables are flushed | ipv4, ipv6"
  block:
      - name: "NOTSCORED | 3.5.4.1 | PATCH | Ensure iptables are flushed | ipv4"
        iptables:
            flush: yes

      - name: "NOTSCORED | 3.5.4.1 | PATCH | Ensure iptables are flushed | ipv6"
        iptables:
            flush: yes
            ip_version: ipv6
        when: cis_ipv6_required|d(false)|bool
  when:
      - cis_rule_3_5_4_1
      - cis_firewall == "nftables"
      - cis_setup_firewall
  tags:
      - level1
      - notscored
      - patch
      - rule_3.5.4.1

- name: "SCORED | 3.5.4.2 | PATCH | Ensure a table exists"
  shell: |
      nft create table inet {{ cis_nftables_table }}
  args:
      executable: /bin/bash
  changed_when: false
  check_mode: false
  # default table name exist when install nftables by apt
  # nft create table will raise an error
  ignore_errors: true
  when:
      - cis_rule_3_5_4_2
      - cis_firewall == "nftables"
      - cis_setup_firewall
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.4.2

- name: "SCORED | 3.5.4.3 | PATCH | Ensure base chains exist"
  shell: |
      nft chain inet {{ cis_nftables_table }} {{ item }} { type filter hook {{ item }} priority 0\; }
  args:
      executable: /bin/bash
  loop:
      - input
      - forward
      - output
  changed_when: false
  check_mode: false
  when:
      - cis_rule_3_5_4_3
      - cis_firewall == "nftables"
      - cis_setup_firewall
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.4.3

- name: "SCORED | 3.5.4.4 | PATCH | Ensure loopback traffic is configured"
  block:
      - name: "SCORED | 3.5.4.4 | PATCH | Ensure loopback traffic is configured | ingress lo allow nay"
        shell: |
            nft add rule inet {{ cis_nftables_table }} input iif lo accept
        args:
            executable: /bin/bash
        changed_when: false
        check_mode: false

      - name: "SCORED | 3.5.4.4 | PATCH | Ensure loopback traffic is configured | ingress deny from lo network ipv4"
        shell: |
            nft add rule inet {{ cis_nftables_table }} input ip saddr 127.0.0.0/8 counter drop
        args:
            executable: /bin/bash
        changed_when: false
        check_mode: false

      - name: "SCORED | 3.5.4.4 | PATCH | Ensure loopback traffic is configured | ingress deny from lo network ipv6"
        shell: |
            nft add rule inet {{ cis_nftables_table }} input ip6 saddr ::1 counter drop
        args:
            executable: /bin/bash
        changed_when: false
        check_mode: false
        when: cis_ipv6_required|d(false)|bool
  when:
      - cis_rule_3_5_4_4
      - cis_firewall == "nftables"
      - cis_setup_firewall
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.4.4

- name: "NOTSCORED | 3.5.4.5 | PATCH | Ensure outbound and established connections are configured"
  shell: |
      nft add rule inet {{ cis_nftables_table }} input ip protocol {{ item }} ct state established accept
      nft add rule inet {{ cis_nftables_table }} output ip protocol {{ item }} ct state new,related,established accept
  args:
      executable: /bin/bash
  loop:
      - tcp
      - udp
      - icmp
  changed_when: false
  check_mode: false
  when:
      - cis_rule_3_5_4_5
      - cis_firewall == "nftables"
      - cis_setup_firewall
  tags:
      - level1
      - notscored
      - patch
      - rule_3.5.4.5

- name: "SCORED | 3.5.4.6 | PATCH | Ensure base chains exist"
  shell: |
      nft chain inet {{ cis_nftables_table }} {{ item }} { policy drop \; }
  args:
      executable: /bin/bash
  loop:
      - input
      - forward
      - output
  changed_when: false
  check_mode: false
  when:
      - cis_rule_3_5_4_6
      - cis_firewall == "nftables"
      - cis_setup_firewall
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.4.6

- name: "SCORED | 3.5.4.7 | PATCH | Ensure nftables service is enabled"
  service:
      name: nftables
      state: started
      enabled: true
  when:
      - cis_rule_3_5_4_7
      - cis_firewall == "nftables"
      - cis_setup_firewall
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.4.7

- name: "SCORED | 3.5.4.8 | PATCH | Ensure nftables rules are permanent"
  shell:
      nft list table inet {{ cis_nftables_table }} > /etc/nftables.conf
  when:
      - cis_rule_3_5_4_8
      - cis_firewall == "nftables"
      - cis_setup_firewall
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.4.8

########################## Firewalld


- name: "SCORED | 3.5.5.1 | PATCH | Ensure firewalld is installed and started | CUSTOM"
  package:
      name: firewalld
      state: present
  when:
      - cis_rule_3_5_5_1
      - cis_firewall == "firewalld"
      - cis_setup_firewall
      - ansible_os_family == "RedHat"
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.5.1

- name: "SCORED | 3.5.5.1 | PATCH | Ensure firewalld is installed and started | CUSTOM"
  service:
      name: firewalld
      state: started
      enabled: true
  when:
      - cis_rule_3_5_5_1
      - cis_firewall == "firewalld"
      - cis_setup_firewall
      - ansible_os_family == "RedHat"
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.5.1

- name: "SCORED | 3.5.5.2 | PATCH | Ensure default deny firewall policy | CUSTOM"
  lineinfile:
      dest: /etc/firewalld/firewalld.conf
      regexp: "^DefaultZone"
      line: "DefaultZone=drop"
  when:
      - cis_rule_3_5_5_2
      - cis_firewall == "firewalld"
      - cis_setup_firewall
      - ansible_os_family == "RedHat"
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.5.2

- name: "SCORED | 3.5.5.2 | PATCH | Ensure default deny firewall policy | CUSTOM"
  firewalld:
      state: enabled
      zone: drop
      permanent: true
  when:
      - cis_rule_3_5_5_2
      - cis_firewall == "firewalld"
      - cis_setup_firewall
      - ansible_os_family == "RedHat"
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.5.2

- name: "SCORED | 3.5.5.3 | PATCH | Ensure firewall rules exist for all open ports | CUSTOM"
  firewalld:
      service: "{{ item }}"
      state: enabled
      zone: drop
      permanent: true
      immediate: true
  when:
      - cis_rule_3_5_5_3
      - cis_firewall == "firewalld"
      - cis_setup_firewall
      - ansible_os_family == "RedHat"
  notify: restart firewalld
  with_items: "{{ cis_firewall_services }}"
  tags:
      - level1
      - scored
      - patch
      - rule_3.5.5.3

############################################################################################
- name: "NOTSCORED | 3.7 | Disable IPv6"
  lineinfile:
      path: /etc/default/grub
      line: ' GRUB_CMDLINE_LINUX="ipv6.disable=1" '
  when:
      - cis_rule_3_7
  notify:
      - generate new grub config
  tags:
      - level2
      - notscored
      - patch
      - rule_3.7