---
- name: "NOTSCORED | 6.1.1 | PATCH | Audit system file permissions"
  command: /bin/true
  changed_when: false
  when:
      - cis_rule_6_1_1
  tags:
      - level2
      - notscored
      - patch
      - rule_6.1.1
      - notimplemented

- name: "SCORED | 6.1.2 | PATCH | Ensure permissions on /etc/passwd are configured"
  file:
      dest: /etc/passwd
      owner: root
      group: root
      mode: 0644
  when:
      - cis_rule_6_1_2
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.2

- name: "SCORED | 6.1.3 | PATCH | Ensure permissions on /etc/gshadow- are configured"
  file:
      dest: /etc/gshadow-
      owner: root
      group: root
      mode: 0000
  when:
      - cis_rule_6_1_3
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.3


- name: "SCORED | 6.1.4 | PATCH | Ensure permissions on /etc/shadow are configured"
  file:
      dest: /etc/shadow
      owner: root
      group: root
      mode: 0000
  when:
      - cis_rule_6_1_4
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.4

- name: "SCORED | 6.1.5 | PATCH | Ensure permissions on /etc/group are configured"
  file:
      dest: /etc/group
      owner: root
      group: root
      mode: 0644
  when:
      - cis_rule_6_1_5
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.5

- name: "SCORED | 6.1.6 | PATCH | Ensure permissions on /etc/passwd- are configured"
  file:
      dest: /etc/passwd-
      owner: root
      group: root
      mode: 0600
  when:
      - cis_rule_6_1_6
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.6

- name: "SCORED | 6.1.7 | PATCH | Ensure permissions on /etc/shadow- are configured"
  file:
      dest: /etc/shadow-
      owner: root
      group: root
      mode: 0000
  when:
      - cis_rule_6_1_7
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.7

- name: "SCORED | 6.1.8 | PATCH | Ensure permissions on /etc/group- are configured"
  file:
      dest: /etc/group-
      owner: root
      group: root
      mode: 0644
  when:
      - cis_rule_6_1_8
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.8

- name: "SCORED | 6.1.9 | PATCH | Ensure permissions on /etc/gshadow are configured"
  file:
      dest: /etc/gshadow
      owner: root
      group: root
      mode: 0000
  when:
      - cis_rule_6_1_9
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.9

- name: "SCORED | 6.1.10 | PATCH | Ensure no world writable files exist"
  command: /bin/true
  changed_when: false
  when:
      - cis_rule_6_1_10
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.10
      - notimplemented

- name: "SCORED | 6.1.11 | PATCH | Ensure no unowned files or directories exist"
  command: /bin/true
  changed_when: false
  when:
      - cis_rule_6_1_11
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.11
      - notimplemented

- name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist"
  command: /bin/true
  changed_when: false
  when:
      - cis_rule_6_1_12
  tags:
      - level1
      - scored
      - patch
      - rule_6.1.12
      - notimplemented



- name: "NOTSCORED | 6.1.13 | PATCH | Remove Audit SUID executables on this file too"
  file:
    path: /usr/sbin/mount.nfs
    state: touch
    owner: root
    group: root
    mode: '0644'

- name: "NOTSCORED | 6.1.13 | PATCH | Audit SUID executables"
  command: "chmod -R u-s {{ item }}"
  changed_when: false
  ignore_errors: true
  with_items:
      - /usr/bin/crontab
      - /usr/bin/staprun
      - /usr/libexec/dbus-1/dbus-daemon-launch-helper
      - /usr/sbin/mount.nfs
      - /usr/sbin/pam_timestamp_check
      - /usr/sbin/unix_chkpwd
      - /usr/sbin/userhelper
      - /usr/sbin/usernetctl
      - /usr/bin/chage
  when:
      - cis_rule_6_1_13
  tags:
      - level1
      - notscored
      - patch
      - rule_6.1.13
      - notimplemented

- name: "NOTSCORED | 6.1.14 | PATCH | Audit SGID executables"
  command: "chmod -R g-s {{ item }}"
  changed_when: false
  ignore_errors: true
  with_items:
      - /usr/bin/write
      - /usr/bin/locate
      - /usr/libexec/openssh/ssh-keysign
      - /usr/libexec/utempter/utempter
      - /usr/sbin/netreport
  when:
      - cis_rule_6_1_14
  tags:
      - level1
      - notscored
      - patch
      - rule_6.1.14
      - notimplemented




- name: "PRELIM | Gather accounts with empty password fields"
  shell: "set -o pipefail;
      cat /etc/shadow | awk -F: '($2 == \"\" ) {j++;print $1; } END {exit j}'"
  args:
      executable: /bin/bash
  register: empty_password_accounts
  changed_when: false
  check_mode: false

- name: "SCORED | 6.2.1 | PATCH | Ensure password fields are not empty"
  command: passwd -l {{ item }}
  changed_when: false
  failed_when: false
  with_items: "{{ empty_password_accounts.stdout_lines }}"
  when:
      - empty_password_accounts.rc
      - cis_rule_6_2_1
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.1

- name: "SCORED | 6.2.2 | PATCH | Ensure no legacy '+' entries exist in /etc/passwd"
  lineinfile:
      regexp: '^\+'
      state: absent
      path: /etc/passwd
  when:
      - cis_rule_6_2_2
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.2

- name: "SCORED | 6.2.3 | PATCH | Ensure no legacy '+' entries exist in /etc/shadow"
  lineinfile:
      regexp: '^\+'
      state: absent
      path: /etc/shadow
  when:
      - cis_rule_6_2_3
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.3

- name: "SCORED | 6.2.4 | PATCH | Ensure no legacy '+' entries exist in /etc/group"
  lineinfile:
      regexp: '^\+'
      state: absent
      path: /etc/group
  when:
      - cis_rule_6_2_4
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.4



- name: "PRELIM | Gather UID 0 accounts other than root"
  shell: "set -o pipefail;
      cat /etc/passwd | awk -F: '($3 == 0 && $1 != \"root\") {i++;print $1 } END {exit i}'"
  args:
      executable: /bin/bash
  register: uid_zero_accounts_except_root
  changed_when: false
  check_mode: false
  
- name: "SCORED | 6.2.5 | PATCH | Ensure root is the only UID 0 account"
  command: passwd -l {{ item }}
  changed_when: false
  failed_when: false
  with_items: "{{ uid_zero_accounts_except_root.stdout_lines }}"
  when:
      - uid_zero_accounts_except_root.rc
      - cis_rule_6_2_5
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.5

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  block:
      - name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity (unimplemented)"
        command: /bin/true
        changed_when: false
        tags:
            - level1
            - scored
            - patch
            - rule_6.2.6
            - notimplemented

      - name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity (collect paths)"
        shell: |
          set -o pipefail;
          sudopath=($(grep secure_path /etc/sudoers | cut -f2 -d= |cut -f2 -d\"))
          IFS=:
          for i in ${sudopath[*]}
          do
            if [ -d "$i" ]
              then newsudopath+=($i)
            fi
           done
          echo "${newsudopath[*]}"
        args:
            executable: /bin/bash
        register: fixsudo
        changed_when: false
        check_mode: false
        tags:
            - level1
            - scored
            - patch
            - rule_6.2.6

      - name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity (fix paths)"
        lineinfile:
            dest: /etc/sudoers
            regexp: "(.*secure_path=).*"
            line: '\1"{{ fixsudo.stdout_lines[0] }}"'
            backrefs: true
        when:
            - fixsudo.stdout_lines[0]
        tags:
            - level1
            - scored
            - patch
            - rule_6.2.6
  when:
      - cis_rule_6_2_6

- name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist"
  command: /bin/true
  changed_when: false
  when:
      - cis_rule_6_2_7
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.7
      - notimplemented


- name: "PRELIM | Gather homes with wrong permissions on /home"
  shell: 'set -o pipefail;
      for dir in $(getent passwd | cut -d '':'' -f 6 | awk ''$1 ~ /^\/home\//'');
      do
        perm=$(stat -L -c "%A" "$dir" );
        if [ -d $dir ] && ([ "${perm:7:3}" != "---" ] || [ "${perm:5:1}" == "w" ] );
        then
          echo -n "$dir ";
        fi;
      done'
  args:
    executable: /bin/bash
  register: homes_with_perms
  changed_when: false
  check_mode: false
- name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  shell: |
      for dir in {{ homes_with_perms.stdout }};
      do
        chmod g-w,o-rwx $dir;
      done
  when:
      - cis_rule_6_2_8
      - homes_with_perms.stdout | length > 0
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.8



- name: "PRELIM | List users accounts"
  command: "awk -F: '{print $1}' /etc/passwd"
  register: users
  changed_when: false
  check_mode: false
- name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  command: /bin/true
  changed_when: false
  when:
      - cis_rule_6_2_9
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.9
      - notimplemented

- name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable"
  command: /bin/true
  changed_when: false
  when:
      - cis_rule_6_2_10
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.10
      - notimplemented

- name: "SCORED | 6.2.11 | PATCH | Ensure no users have .forward files"
  file:
      state: absent
      dest: "~{{ item }}/.forward"
  with_items: "{{ users.stdout_lines }}"
  when:
      - cis_rule_6_2_11
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.11

- name: "SCORED | 6.2.12 | PATCH | Ensure no users have .netrc files"
  file:
      state: absent
      dest: "~{{ item }}/.netrc"
  with_items: "{{ users.stdout_lines }}"
  when:
      - cis_rule_6_2_12
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.12

- name: "SCORED | 6.2.14 | PATCH | Ensure no users have .rhosts files"
  file:
      state: absent
      dest: "~{{ item }}/.rhosts"
  with_items: "{{ users.stdout_lines }}"
  when:
      - cis_rule_6_2_14
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.14

- name: "SCORED | 6.2.15 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group"
  command: /bin/true
  changed_when: false
  when:
      - cis_rule_6_2_15
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.15
      - notimplemented

- name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
  command: /bin/true
  changed_when: false
  when:
      - cis_rule_6_2_16
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.16
      - notimplemented

- name: "SCORED | 6.2.17 | PATCH | Ensure no duplicate GIDs exist"
  command: /bin/true
  changed_when: false
  when:
      - cis_rule_6_2_17
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.17
      - notimplemented

- name: "SCORED | 6.2.18 | PATCH | Ensure no duplicate user names exist"
  command: /bin/true
  changed_when: false
  when:
      - cis_rule_6_2_18
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.18
      - notimplemented

- name: "SCORED | 6.2.19 | PATCH | Ensure no duplicate group names exist"
  command: /bin/true
  changed_when: false
  when:
      - cis_rule_6_2_19
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.19
      - notimplemented

- name: "SCORED | 6.2.20 | PATCH | Ensure shadow group is empty"
  command: /bin/true
  changed_when: false
  when:
      - cis_rule_6_2_20
  tags:
      - level1
      - scored
      - patch
      - rule_6.2.20
      - notimplemented
