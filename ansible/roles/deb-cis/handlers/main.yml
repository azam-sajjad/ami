---
# handlers file for centos-cis


# Section1
- name: systemd restart tmp.mount
  become: true
  systemd:
      name: tmp.mount
      daemon_reload: true
      enabled: true
      masked: false
      state: reloaded
  when: ansible_virtualization_type != "docker"
  ignore_errors: "{{ cis_ignore_remount_errors }}"

- name: systemd restart var-tmp.mount
  become: true
  systemd:
      name: var-tmp.mount
      daemon_reload: true
      enabled: true
      masked: false
      state: reloaded
  ignore_errors: "{{ cis_ignore_remount_errors }}"

# Section2
- name: restart xinetd
  become: true
  service:
      name: xinetd
      state: restarted
# Section3

- name: iptables save
  command: sudo netfilter-persistent save
- name: netfilter save
  command: sudo netfilter-persistent save

- name: iptables save to file
  command: sudo iptables-save > /etc/iptables/rules.v4
- name: ip6tables save to file
  command: sudo ip6tables-save > /etc/iptables/rules.v6


- name: restart enable netfilter-persistent
  service:
    name: netfilter-persistent
    state: restarted
    enabled: yes

- name: restart firewalld
  become: true
  service:
      name: firewalld
      state: restarted

- name: reload nftables
  become: true
  service:
      name: nftables
      state: reloaded


# Section4
- name: generate new grub config
  become: true
  command: grub-mkconfig -o /boot/grub/grub.cfg
  notify: fix permissions after generate new grub config handler

- name: fix permissions after generate new grub config handler
  become: true
  file:
    path: "/boot/grub/grub.cfg"
    owner: root
    group: root
    mode: 0400
  when:
    - ansible_os_family == "RedHat"
    - cis_rule_1_4_1

- name: load audit rules
  become: true
  command: /sbin/augenrules --load

- name: restart journald
  become: true
  service:
      name: systemd-journald
      state: restarted



- name: reload dconf
  become: true
  command: dconf update


- name: restart systemd-coredump
  become: true
  service:
      name: systemd-coredump.socket
      daemon_reload: true
      enabled: true
      state: restarted


- name: restart sshd
  become: true
  service:
      name: sshd
      state: restarted


- name: Reboot machine and send a message
  ansible.builtin.reboot:
    msg: "Rebooting machine in 5 seconds"
  when:
    - reboot_machine_after_completion