//##########################################################################################################################
pipeline {
    agent { label "rhel" }
    environment {
        AWS_DEFAULT_REGION="us-east-2"
        ECS-AMI-ID = ""
    }
    stages {
        stage('Hello') {
            steps {
                sh '''
                    aws --version
                    aws ec2 describe-instances
                '''
            }
        }
    }
}

//##########################################################################################################################
pipeline {
    agent { label 'rhel' }
    environment {
        AWS_DEFAULT_REGION=""
    }
    parameters { 
        choice(name: 'Distribution', choices:['ECS', 'EKS', 'amazonLinux2', 'amazonLinux2023', 'centos7', 'centos9', 'debian10', 'debian12', 'ubuntu20', 'ubuntu22'], description:'Select Distribution for Hardened AMI')
}
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/azam-sajjad/ami.git'
            }
        }

        stage('Build Image') {
            steps {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'eurus-control']]) {
                    dir('packer') {
                        sh """
                        cd ..
                        export DIR=`pwd`
                        cd packer
                        echo "========================= Creating ${params.Distribution} Hardened AMI ========================="
                        export DATE=`date +%d-%m-%Y`
                        /usr/bin/packer init ${params.Distribution}.pkr.hcl
                        /usr/bin/packer build ${params.Distribution}.pkr.hcl
                        """
                    }
                }
            }
        }
        stage('Build Image') {
            when {
                    expression {
                        return params.Distribution == 'ECS'
                    }
                }
            steps {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'eurus-control']]) {
                    dir('packer') {
                        sh """
                        cd ..
                        export AMI_ID=`aws ssm get-parameters --names /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id --region ${AWS_DEFAULT_REGION} --query "Parameters[0].Value"`
                        export DIR=`pwd`
                        cd packer
                        echo "========================= Creating ${params.Distribution} Hardened AMI ========================="
                        export DATE=`date +%d-%m-%Y`
                        /usr/bin/packer init ${params.Distribution}.pkr.hcl
                        /usr/bin/packer build ${params.Distribution}.pkr.hcl
                        """
                    }
                }
        steps{
          script {
            sh script:'''
                            aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${DEV_AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com

                            docker build -t ${DEV_IMAGE_REPO_NAME}:${COMMIT_ID} .

                            docker tag ${DEV_IMAGE_REPO_NAME}:${COMMIT_ID} ${DEV_REPOSITORY_URI}:${COMMIT_ID}

                            docker tag ${DEV_IMAGE_REPO_NAME}:${COMMIT_ID} ${DEV_REPOSITORY_URI}:latest

                            docker push ${DEV_AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${DEV_IMAGE_REPO_NAME}:${COMMIT_ID}

                            docker push ${DEV_AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${DEV_IMAGE_REPO_NAME}:latest
                        
                        '''
          }
        }
            }
        }
    }
}

//##########################################################################################################################
pipeline {
    agent { label 'rhel' }
    environment {
        AWS_DEFAULT_REGION="us-east-2"
        DATE="`date +%d-%m-%Y`"
    }
    parameters { 
        choice(name: 'Distribution', choices:['amazonLinux2', 'amazonLinux2023', 'centos7', 'centos9', 'debian10', 'debian12', 'ubuntu20', 'ubuntu22'], description:'Select Distribution for Hardened AMI')
}

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/azam-sajjad/packer.git'
            }
        }

        stage('Build ${params.Distribution} Image') {
            steps {
                script {
                    if(params.Distribution) {
                        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'eurus-control']]) {
                            dir('packer') {
                                sh """
                                echo "========================= Creating \"${params.Distribution}\" Hardened AMI ========================="
                                /usr/bin/packer init \"${params.Distribution}\".pkr.hcl
                                /usr/bin/packer build \"${params.Distribution}\".pkr.hcl
                                """
                            }
                        }
                    }
                }
            }
        }
    }
}